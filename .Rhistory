DataM[["MiniValue"]] = as.numeric(rownames(DataM))
colnames(DataM) = c("Years","MiniValue")
y = (DataM[,"MiniValue"] - U_)/Alpha
EVI = exp(-exp(-y))
EVI_DF = data.frame(DataM,EVI,y)
colnames(EVI_DF) = c("Years","MinSortedData", "EVI_Fx","yt")
rownames(EVI_DF) = c(1:nrow(EVI_DF))
return(EVI_DF)
}
Fx_EVI_min = EVI(DataMini, Valor_A2, Valor_U2)
Fx_EVI_min = EVIMin(DataMini, Valor_A2, Valor_U2)
EVIMin = function(DataM,Alpha,U_){
DataM = tapply(DataM[,"Years"], DataM[,"MinValue"], sort, decreasing=TRUE)
DataM = data.frame(DataM)
DataM[["MinValue"]] = as.numeric(rownames(DataM))
colnames(DataM) = c("Years","MinValue")
y = (DataM[,"MinValue"] - U_)/Alpha
EVI = exp(-exp(-y))
EVI_DF = data.frame(DataM,EVI,y)
colnames(EVI_DF) = c("Years","MinSortedData", "EVI_Fx","yt")
rownames(EVI_DF) = c(1:nrow(EVI_DF))
return(EVI_DF)
}
Fx_EVI_min = EVIMin(DataMini, Valor_A2, Valor_U2)
View(Fx_EVI_min)
EVI_RP(Fx_EVI_min)
View(Fx_EVI_PR)
View(Fx_EVI_min)
sort(DataMini$MinValue, decreasing = TRUE)
tapply(DataMini$Years, DataMini$MinValue, sort, decreasing=TRUE)
tapply(DataMini$Years, DataMini$MinValue, sort, decreasing=T)
tapply(DataMini$Years, DataMini$MinValue, sort)
tapply(DataMini$Years, DataMini$MinValue, sort(decreasing = TRUE))
tapply(DataMini$Years, DataMini$MinValue, sort,decreasing = TRUE)
tapply(DataMini$Years, DataMini$MinValue, sort)
?tapply
tapply(DataMini$Years, DataMini$MinValue, sort, default = 0)
tapply(DataMini$Years, DataMini$MinValue, sort, default = 1)
tapply(DataMini$Years, DataMini$MinValue, sort, decreasing = TRUE)
tapply(DataMini$Years, DataMini$MinValue, sort.default, decreasing = TRUE)
order(DataMini$MinValue, decreasing = TRUE)
DataMini[order(DataMini$MinValue, decreasing = TRUE),]
EVIMin = function(DataM,Alpha,U_){
#DataM = tapply(DataM[,"Years"], DataM[,"MinValue"], sort, decreasing=TRUE)
DataM = DataM[sort(DataM[["MinValue"]], decreasing = TRUE),]
#DataM = data.frame(DataM)
#DataM[["MinValue"]] = as.numeric(rownames(DataM))
colnames(DataM) = c("Years","MinValue")
y = (DataM[,"MinValue"] - U_)/Alpha
EVI = exp(-exp(-y))
EVI_DF = data.frame(DataM,EVI,y)
colnames(EVI_DF) = c("Years","MinSortedData", "EVI_Fx","yt")
rownames(EVI_DF) = c(1:nrow(EVI_DF))
return(EVI_DF)
}
EVI_RP(Fx_EVI_min)
Fx_EVI_min = EVIMin(DataMini, Valor_A2, Valor_U2)
EVIMin = function(DataM,Alpha,U_){
#DataM = tapply(DataM[,"Years"], DataM[,"MinValue"], sort, decreasing=TRUE)
DataM = DataM[sort(DataM[["MinValue"]], decreasing = TRUE),]
#DataM = data.frame(DataM)
#DataM[["MinValue"]] = as.numeric(rownames(DataM))
colnames(DataM) = c("Years","MinValue")
y = (DataM[,"MinValue"] - U_)/Alpha
EVI = exp(-exp(-y))
EVI_DF = data.frame(DataM,EVI,y)
colnames(EVI_DF) = c("Years","MinSortedData", "EVI_Fx","yt")
rownames(EVI_DF) = c(1:nrow(EVI_DF))
return(EVI_DF)
}
Fx_EVI_min = EVIMin(DataMini, Valor_A2, Valor_U2)
View(Fx_EVI_min)
DataMini[order(DataMini[["MinValue"]], decreasing = TRUE),]
EVIMin = function(DataM,Alpha,U_){
#DataM = tapply(DataM[,"Years"], DataM[,"MinValue"], sort, decreasing=TRUE)
DataM = DataM[order(DataM[["MinValue"]], decreasing = TRUE),]
#DataM = data.frame(DataM)
#DataM[["MinValue"]] = as.numeric(rownames(DataM))
colnames(DataM) = c("Years","MinValue")
y = (DataM[,"MinValue"] - U_)/Alpha
EVI = exp(-exp(-y))
EVI_DF = data.frame(DataM,EVI,y)
colnames(EVI_DF) = c("Years","MinSortedData", "EVI_Fx","yt")
rownames(EVI_DF) = c(1:nrow(EVI_DF))
return(EVI_DF)
}
Fx_EVI_min = EVIMin(DataMini, Valor_A2, Valor_U2)
EVI_RP(Fx_EVI_min)
hist(DataMini$MinValue)
cat("R^{2}")
cat("R^2")
shiny::runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
shiny::runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
print(choose.dir())
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
data.frame("T"=2, "d"=1)
data.frame("T"=c(2,2), "d"=c(1,2))
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
shiny::runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
Q=""
W=""
if(Q=="" || W=""){return(0)}
if(Q=="" | W=""){return(0)}
if(Q=="" or W=""){return(0)}
c("")
if(Q=="1" || W="2"){return(0)}
if(Q=="" or W==""){return(0)}
if(Q=="" || W==""){return(0)}
Q="Dates"
W="Rainfall"
if(Q=="Dates" || W=="Rainfall"){return(0)}
if(Q=="Dates" || W=="Rainfall"){return(NULL)}
if(Q=="Dates" & W=="Rainfall"){return(NULL)}
if(Q=="Dates"){return(NULL)}
if(Q=="Dates"){cat("waiting")}
if(Q=="Dates" & W=="Rainfall"){cat("wait")}
if(Q=="Dates" && W=="Rainfall"){cat("wait")}
if(Q=="Dates" && W=="rainfall"){cat("wait")}
if(Q=="Dates" || W=="rainfall"){cat("wait")}
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
"{222][2]"
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
install.packages("ncdf4")
library(ncdf4)
Url1 = read.table(file.choose())
View(Url1)
Url1[1]
Url1[1,1]
Url1[2,1]
nrow(Url1)
PathToDownload = "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc"
for(i in 1:nrow(Url1)){
download.file(url = Url1[i,1], destfile = paste(PathToDownload), mode="wb" )
}
for(i in 1:nrow(Url1)){
download.file(url = paste(Url1[i,1]), destfile = paste(PathToDownload), mode="wb" )
}
paste(Url1[1,1])
download.file(url = paste(Url1[1,1]), destfile = paste(PathToDownload), mode="wb" )
getwd()
seq(as.Date("2019/01/01",),as.Date("2019/03/01"), by="month")
paste(seq(as.Date("2019/01/01",),as.Date("2019/03/01"), by="month"))
Names1 = seq(seq(as.Date("1982/01/01",),as.Date("1990/02/01"), by="month"))
Names1 = seq(as.Date("1982/01/01",),as.Date("1990/02/01"), by="month"))
Names1 = seq(as.Date("1982/01/01"),as.Date("1990/02/01"), by="month"))
Names1 = seq(as.Date("1982/01/01"),as.Date("1990/02/01"), by="month")
Names1[5]
download.file(url = paste(Url1[1,1]), destfile = paste(PathToDownload,"/",Names1[2],".nc", sep=""), mode="wb" )
download.file(url = "https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", destfile = paste(PathToDownload,"/",Names1[2],".nc", sep=""), mode="wb" )
download.file(url = "https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", destfile = paste(PathToDownload,"/",Names1[2],".nc", sep=""),method = "auto" ,mode="wb" )
install.packages("RCurl")
library(RCurl)
library(RCurl)
RCurl::curl_download("https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", paste(PathToDownload,"/",Names1[2],".nc", sep=""))
getURL("https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc",, userpwd="key:secret", httpauth = 1L)
getURL("https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", userpwd="key:secret", httpauth = 1L)
getURL("https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc")
?download.file()
download.file(url = "https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", destfile = paste(PathToDownload,"/",Names1[2],".nc", sep=""),method = "wget" )
download.file(url = "https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", destfile = paste(PathToDownload,"/",Names1[2],".nc", sep=""),method = "curl")
for(i in 1:nrow(Url1)){
download.file(url = paste(Url1[i,1]), destfile = paste(PathToDownload), method = "curl")
}
for(i in 1:nrow(Url1)){
download.file(url = paste(Url1[i,1]), destfile = paste(PathToDownload,"/",Names[1],".nc",sep=""), method = "curl")
}
for(i in 1:nrow(Url1)){
download.file(url = paste(Url1[i,1]), destfile = paste(PathToDownload,"/",Names[i],".nc",sep=""), method = "curl")
}
for(i in 1:nrow(Url1)){
download.file(url = paste(Url1[i,1]), destfile = paste(PathToDownload,"/",Names1[2],".nc", sep=""), method = "curl")
}
download.file(url = "https://giovanni.gsfc.nasa.gov/session/22364662-7EA8-11EA-B022-D59D79988AF1/7D26506E-7EAB-11EA-BCDE-831879988AF1/7D284284-7EAB-11EA-BCDE-831879988AF1/g4.subsetted.FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg.19820101.178W_60S_178E_89N.nc", destfile = paste(PathToDownload,"/",Names1[5],".nc", sep=""),method = "curl")
download.file(url = paste(Url1[6,1]), destfile = paste(PathToDownload,"/",Names1[6],".nc", sep=""),method = "curl")
1:nrow(Url1)
for(i in 1:nrow(Url1)){
download.file(url = paste(Url1[i,1]), destfile = paste(PathToDownload,"/",Names1[i],".nc", sep=""), method = "curl")
}
library(ncdf4)
install.packages("ncdf.tools")
prueba = nc_open(file.choose())
print(prueba)
prueba = nc_open(file.choose())
prueba = nc_open(file.choose())
prueba = nc_open("H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc/1987-01-01.nc")
install.packages("ncdfgeom")
library(ncdf.tools)
library(ncdfgeom)
prueba = nc_open("H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc/1987-01-01.nc")
prueba = nc_open(file.choose())
print(prueba)
lon <- ncvar_get(prueba,"lon")
nlon <- dim(lon)
head(lon)
lat <- ncvar_get(prueba,"lat",verbose=F)
nlat <- dim(lat)
head(lat)
print(c(nlon,nlat))
t <- ncvar_get(prueba,"time")
t
tunits <- ncatt_get(prueba,"time","units")
nt <- dim(t)
nt
readline(file.choose())
lines=readline(file.choose())
install.packages("rvest")
library(rvest)
HtmlTexto = read_html(file.choose())
html_nodes(HtmlTexto)
html_nodes("a")
HtmlTexto %>% html_nodes("a")
HtmlTexto %>% html_nodes("a") %>% html_text()
lext =  HtmlTexto %>% html_nodes("a") %>% html_text()
lext
lext =  HtmlTexto %>% html_nodes("a")
lext
gsub("<","",lext)
gsub("<a","",lext)
gsub("<a href=","",lext)
gsub("<a href="","",lext)
gsub("<a href=\"","",lext)
View(lext)
?list
matrix(c("assdd","kdkdkd","kkdkdkd", ncol=1))
matrix(NA,nrow=10,ncol=1)
Uril1B = matrix(NA,nrow = nrow(Url1), ncol = 1)
for(i in 1:nrow(Url1)){
Uril1B = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep="")) %>% HtmlTexto %>% html_nodes("a")
}
for(i in 1:nrow(Url1)){
Uril1B = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
}
View(Uril1B)
for(i in 1:nrow(Url1)){
Uril1B[i,1] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
}
Uril1B = matrix(NA,nrow = nrow(Url1), ncol = 1)
for(i in 1:nrow(Url1)){
Uril1B[i,1] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
}
for(i in 1:nrow(Url1)){
Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
}
list()
list(!:3)
list(1:3)
list(1:3,1:3)
list(1:3,5:8)
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
Uril1B = list(read_html(paste(PathToDownload,"/",Names1[i],".nc", sep="")))
}
Uril1B[[1]] %>% html_nodes("a")
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
Uril1B = list(read_html(paste(PathToDownload,"/",Names1[i],".nc", sep="")))
Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
}
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
Uril1B = list(read_html(paste(PathToDownload,"/",Names1[i],".nc", sep="")))
#Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
}
View(Uril1B)
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))%>%html_nodes("a")
#Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
}
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
print(read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))%>%html_nodes("a"))
#Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
}
Uril1B = matrix(NA,nrow = nrow(Url1), ncol = 1)
Uril1B = data.frame(Uril1B)
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
Uril1B[i,1] = (read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))%>%html_nodes("a"))
#Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
}
View(Uril1B)
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
Uril1B[i,1] = paste0(read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))%>%html_nodes("a"))
#Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
}
gsub(">a href=\"","",Uril1B)
gsub(">a href=\"","",Uril1B[1,1])
gsub("<a href=\"","",Uril1B[1,1])
gsub(">here</a>\"","",Uril1B[1,1])
gsub(">here</a>"","",Uril1B[1,1])
gsub(">here</a>","",Uril1B[1,1])
gsub(">here</a>\"","",Uril1B[1,1])
gsub(">here</a> \"","",Uril1B[1,1])
gsub('>here</a>\"',"",Uril1B[1,1])
gsub(">here</a>\"","",Uril1B[1,1])
gsub(">here</a>,"",Uril1B[1,1])
gsub(">here</a>,,Uril1B[1,1])
gsub(">here</a>",Uril1B[1,1])
gsub(">here</a>","",Uril1B[1,1])
gsub("\"","",Uril1B[1,1])
gsub(">here</a>","",Uril1B[1,1])
for(i in 1:nrow(Url1)){
#Uril1B[i,] = read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))  %>% html_nodes("a")
Uril1B[i,1] = paste0(read_html(paste(PathToDownload,"/",Names1[i],".nc", sep=""))%>%html_nodes("a"))
#Uril1C = list(Uril1B[[i]]%>%html_nodes("a"))
Uril1B[i,1] =gsub("<a href=\"","",Uril1B[i,1])
Uril1B[i,1] =gsub("\"","",Uril1B[i,1])
Uril1B[i,1] =gsub(">here</a>","",Uril1B[i,1])
}
id1 = c(1:nrow(Url1))
View(Uril1B)
id1[1]
id1[5]
for(i in 1:nrow(Url1)){
download.file(url = paste(Uril1B[i,1]), destfile = paste(PathToDownload,"/",id1[i],"_",Names1[i],".nc", sep=""), method = "curl")
}
download.file(url = paste(Uril1B[1,1]), destfile = paste(PathToDownload,"/",id1[1],"_",Names1[1],".nc", sep=""), method = "curl")
paste(Uril1B[1,1])
download.file(url = paste(Uril1B[1,1]), destfile = paste(PathToDownload,"/",id1[1],"_",Names1[1],".nc", sep=""), method = "wget")
?download.file
download.file(url = paste(Uril1B[1,1]), destfile = paste(PathToDownload,"/",id1[1],"_",Names1[1],".nc", sep=""), method = "libcurl")
download.file(url = paste(Uril1B[2,1]), destfile = paste(PathToDownload,"/",id1[2],"_",Names1[2],".nc", sep=""), method = "auto")
archivonc=getURL(paste(Uril1B[2,1]))
paste(Uril1B[2,1])
archivonc=getURL(url=paste(Uril1B[2,1]))
download.file(url = paste(Uril1B[2,1]), destfile = paste(PathToDownload,"/",id1[2],"_",Names1[2],".nc", sep=""),"form.html")
download.file(url = paste(Uril1B[2,1]), destfile = paste(PathToDownload,"/",id1[2],"_",Names1[2],".nc", sep=""),method = "lynx")
download.file(url = paste(Uril1B[2,1]), destfile = paste(PathToDownload,"/",id1[2],"_",Names1[2],".nc", sep=""),method = "wininet")
download.file(url = paste(Uril1B[2,1]), destfile = paste(PathToDownload,"/",id1[2],"_",Names1[2],".nc", sep=""),method = "internal")
download.file(url = paste(Uril1B[2,1]), destfile = paste(PathToDownload,"/",id1[2],"_",Names1[2],".nc", sep=""),method = "curl")
archivonc = nc_open(paste(Uril1B[2,1]))
paste(Uril1B[2,1])
archivonc = nc_open("https://urs.earthdata.nasa.gov/oauth/authorize/?scope=uid&amp;app_type=401&amp;client_id=e2WVk8Pw6weeLUKZYOxvTQ&amp;response_type=code&amp;redirect_uri=https%3A%2F%2Fgiovanni.gsfc.nasa.gov%2Furs-redirect&amp;state=aHR0cHM6Ly9naW92YW5uaS5nc2ZjLm5hc2EuZ292L3Nlc3Npb24vMjIzNjQ2NjItN0VBOC0xMUVBLUIwMjItRDU5RDc5OTg4QUYxLzdEMjY1MDZFLTdFQUItMTFFQS1CQ0RFLTgzMTg3OTk4OEFGMS83RDI4NDI4NC03RUFCLTExRUEtQkNERS04MzE4Nzk5ODhBRjEvZzQuc3Vic2V0dGVkLkZMREFTX05PQUgwMV9DX0dMX01fMDAxX1RhaXJfZl90YXZnLjE5ODIwMjAxLjE3OFdfNjBTXzE3OEVfODlOLm5j")
url.show("https://urs.earthdata.nasa.gov/oauth/authorize/?scope=uid&amp;app_type=401&amp;client_id=e2WVk8Pw6weeLUKZYOxvTQ&amp;response_type=code&amp;redirect_uri=https%3A%2F%2Fgiovanni.gsfc.nasa.gov%2Furs-redirect&amp;state=aHR0cHM6Ly9naW92YW5uaS5nc2ZjLm5hc2EuZ292L3Nlc3Npb24vMjIzNjQ2NjItN0VBOC0xMUVBLUIwMjItRDU5RDc5OTg4QUYxLzdEMjY1MDZFLTdFQUItMTFFQS1CQ0RFLTgzMTg3OTk4OEFGMS83RDI4NDI4NC03RUFCLTExRUEtQkNERS04MzE4Nzk5ODhBRjEvZzQuc3Vic2V0dGVkLkZMREFTX05PQUgwMV9DX0dMX01fMDAxX1RhaXJfZl90YXZnLjE5ODIwMjAxLjE3OFdfNjBTXzE3OEVfODlOLm5j")
curl("https://urs.earthdata.nasa.gov/oauth/authorize/?scope=uid&amp;app_type=401&amp;client_id=e2WVk8Pw6weeLUKZYOxvTQ&amp;response_type=code&amp;redirect_uri=https%3A%2F%2Fgiovanni.gsfc.nasa.gov%2Furs-redirect&amp;state=aHR0cHM6Ly9naW92YW5uaS5nc2ZjLm5hc2EuZ292L3Nlc3Npb24vMjIzNjQ2NjItN0VBOC0xMUVBLUIwMjItRDU5RDc5OTg4QUYxLzdEMjY1MDZFLTdFQUItMTFFQS1CQ0RFLTgzMTg3OTk4OEFGMS83RDI4NDI4NC03RUFCLTExRUEtQkNERS04MzE4Nzk5ODhBRjEvZzQuc3Vic2V0dGVkLkZMREFTX05PQUgwMV9DX0dMX01fMDAxX1RhaXJfZl90YXZnLjE5ODIwMjAxLjE3OFdfNjBTXzE3OEVfODlOLm5j")
print(Uril1B[,1])
params <- list('j_username' = 'victor.lizcano@correounivalle.edu.co',
'j_password' = 'VAls1062276307')
cmap <- postForm(paste(Uril1B[i,1]), .params=params, style="POST")
cmap <- postForm("https://giovanni.gsfc.nasa.gov/giovanni/", .params=params, style="POST")
write(Uril1B, "Links1.txt")
write.table(Uril1B, "Links1.txt")
View(Uril1B)
write.table(Uril1B, "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc/Links1.txt")
write.csv2(Uril1B, "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc/Links1.csv")
?write.csv2
View(Uril1B)
Uril1B= data.frame(Uril1B)
View(Uril1B)
write.csv2(Uril1B, "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc/Links1.csv")
Uril1B[,1]
Uril1B[1,1]
class(Uril1B)
matrix(Uril1B)
matrix(Uril1B[,1])
Uril1C= matrix(Uril1B[,1])
View(Uril1C)
write.table(Uril1C, "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/URL_desc/Links1.txt")
library(ncdf4)
library(ncdf.tools)
library(ncdfgeom)
library(RCurl)
library(rvest)
NCData = read.table(file.choose())
NCDates = seq(as.Date("1982/01/01"),as.Date("2020/02/01"), by="month")
NCPath = "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/Temp_Sup_Mensual"
NCData = nc_open(file.choose())
print(NCData)
plot(NCData)
lon <- ncvar_get(NCData,"lon") #Longitude
nlon <- dim(lon)
head(lon)
lat <- ncvar_get(NCData,"lat",verbose=F) #Latitude
nlat <- dim(lat)
head(lat)
print(c(nlon,nlat))
t <- ncvar_get(NCData,"time")
t
t
tunits <- ncatt_get(NCData,"time","units")
nt <- dim(t)
nt
lat
grid(head(lon),head(lat))
lat
grid(head(lon),head(lat))
str(NCData)
View(NCData)
ncvar_get(NCData,var)
ncvar_get(NCData,varid = var)
ncvar_get(NCData,varid = "temp")
ncvar_get(NCData,varid = "tmp")
ncvar_get(NCData,tmp)
ncvar_get(NCData,"tmp")
sink()
print(NCData)
ncvar_get(NCData,"air_temperature")
ncvar_get(NCData,"Air_Temperature")
ncvar_get(NCData,"latv")
ncvar_get(NCData,"bnds")
ncvar_get(NCData,"lon")
prnt(NCData)
print(NCData)
NCData$filename
NCData$writable
NCData$id
NCData$groups
NCData$fqgn2Rindex
ncvar_get(NCData,"temp")
print(NCData)
ncvar_get(NCData,"fldas")
attributes(NCData)
ncvar_get(NCData,"var")
NCData$nvars
attributes(NCData)$names
install.packages("RNetCDF")
library(RNetCDF)
read.nc(NCData)
print.nc(NCData)
#NCData = nc_open(file.choose())
NCData = open.nc(file.choose())
#--------------------------------------------------------------------------------------------------------------#
print.nc(NCData)
read.nc(NCData)
NCDataTemp = read.nc(NCData)
View(NCDataTemp)
z = NCDataTemp$FLDAS_NOAH01_C_GL_M_001_Tair_f_tavg
ylat = NCDataTemp$lat
xlon = NCDataTemp$lon
xlon = length(NCDataTemp$lon)
ylat = length(NCDataTemp$lat)
dim(z)
library(maptools)
install.packages("fields")
library(fields)
image.plot(xlon,xlat,t(z))
image.plot(xlon,ylat,t(z))
image.plot(xlon,ylat,t(z), breaks = c(1:10))
plot(NCDataTemp,add=TRUE)
View(z)
lon
tail(lon)
tail(lat)
head(lat)
rep(lon, length(lon))
rep(head(lon), length(head(lon)))
sort(c(h,a,e,g))
sort(c(1,10,5,3))
rep(head(lon), length(head(lon)))
sort(rep(head(lat), length(head(lat))))
ListaArchivos = file.show(choose.dir())
ListaArchivos = list.files(choose.dir())
shiny::runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
#drive_download("https://drive.google.com/open?id=1Nvdj7hbimvuih7ATCt5vYDtq7FgbJmrp", path = "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/198801.tif")
download.file("https://drive.google.com/open?id=1Nvdj7hbimvuih7ATCt5vYDtq7FgbJmrp", "pruT.tif")
drive_download("https://drive.google.com/open?id=1Nvdj7hbimvuih7ATCt5vYDtq7FgbJmrp", path = "H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R/DataSet_Temp/198801.tif")
download.file("https://drive.google.com/open?id=1Nvdj7hbimvuih7ATCt5vYDtq7FgbJmrp", destfile = "pruT.tif")
raster("https://drive.google.com/open?id=1Nvdj7hbimvuih7ATCt5vYDtq7FgbJmrp")
ls()
shiny::runApp('H:/TESIS_DOCTORADO_2016/ARTICULOS/1_ANALISIS_DE_DATOS/APLICACION_WEB_R')
